public ListSpeechSynthesisTasksResult listSpeechSynthesisTasks(ListSpeechSynthesisTasksRequest request) {request = beforeClientExecution(request);return executeListSpeechSynthesisTasks(request);}
public UpdateJourneyStateResult updateJourneyState(UpdateJourneyStateRequest request) {request = beforeClientExecution(request);return executeUpdateJourneyState(request);}
public void removePresentationFormat() {remove1stProperty(PropertyIDMap.PID_PRESFORMAT);}
public CellRangeAddressList(int firstRow, int lastRow, int firstCol, int lastCol) {this();addCellRangeAddress(firstRow, firstCol, lastRow, lastCol);}
public void delete(int key) {int i = binarySearch(mKeys, 0, mSize, key);if (i >= 0) {if (mValues[i] != DELETED) {mValues[i] = DELETED;mGarbage = true;}}}
public CreateBranchCommand setStartPoint(RevCommit startPoint) {checkCallable();this.startCommit = startPoint;this.startPoint = null;return this;}
public int centerX() {return x + w / 2;}
public ListPresetsResult listPresets() {return listPresets(new ListPresetsRequest());}
public DeleteFolderContentsResult deleteFolderContents(DeleteFolderContentsRequest request) {request = beforeClientExecution(request);return executeDeleteFolderContents(request);}
public GetConsoleOutputResult getConsoleOutput(GetConsoleOutputRequest request) {request = beforeClientExecution(request);return executeGetConsoleOutput(request);}
public PutMailboxPermissionsResult putMailboxPermissions(PutMailboxPermissionsRequest request) {request = beforeClientExecution(request);return executePutMailboxPermissions(request);}
public Cluster disableSnapshotCopy(DisableSnapshotCopyRequest request) {request = beforeClientExecution(request);return executeDisableSnapshotCopy(request);}
public static String stripExtension(String filename) {int idx = filename.indexOf('.');if (idx != -1) {filename = filename.substring(0, idx);}return filename;}
public ByteBuffer putInt(int value) {throw new ReadOnlyBufferException();}
public int lastIndexOf(final int o){int rval = _limit - 1;for (; rval >= 0; rval--){if (o == _array[ rval ]){break;}}return rval;}
public void setCountsByTime(int[] counts, long msecStep) {countsByTime = counts;countsByTimeStepMSec = msecStep;}
public FeatHdrRecord(RecordInputStream in) {futureHeader = new FtrHeader(in);isf_sharedFeatureType = in.readShort();reserved = in.readByte();cbHdrData = in.readInt();rgbHdrData = in.readRemainder();}
public CopyOnWriteArrayList() {elements = EmptyArray.OBJECT;}
public WriteRequest(DeleteRequest deleteRequest) {setDeleteRequest(deleteRequest);}
public void readFully(byte[] buf){_in.readFully(buf);}
public static Cell getCell(Row row, int columnIndex) {Cell cell = row.getCell(columnIndex);if (cell == null) {cell = row.createCell(columnIndex);}return cell;}
public void setPackConfig(PackConfig pc) {this.packConfig = pc;}
public String getSignerName() {return "HMAC-SHA1";}
public IntervalSet or(IntSet a) {IntervalSet o = new IntervalSet();o.addAll(this);o.addAll(a);return o;}
public String toString() {return getClass().getName() + " [" +_value +"]";}
public DescribeVpcEndpointServicePermissionsResult describeVpcEndpointServicePermissions(DescribeVpcEndpointServicePermissionsRequest request) {request = beforeClientExecution(request);return executeDescribeVpcEndpointServicePermissions(request);}
public static byte[] copyOfRange(byte[] original, int start, int end) {if (start > end) {throw new IllegalArgumentException();}int originalLength = original.length;if (start < 0 || start > originalLength) {throw new ArrayIndexOutOfBoundsException();}int resultLength = end - start;int copyLength = Math.min(resultLength, originalLength - start);byte[] result = new byte[resultLength];System.arraycopy(original, start, result, 0, copyLength);return result;}
public ListTopicsRequest(String nextToken) {setNextToken(nextToken);}
public void finish(FieldInfos fis, int numDocs) throws IOException {if (!pendingDocs.isEmpty()) {flush();numDirtyChunks++; }if (numDocs != this.numDocs) {throw new RuntimeException("Wrote " + this.numDocs + " docs, finish called with numDocs=" + numDocs);}indexWriter.finish(numDocs, vectorsStream.getFilePointer());vectorsStream.writeVLong(numChunks);vectorsStream.writeVLong(numDirtyChunks);CodecUtil.writeFooter(vectorsStream);}
public boolean isIndexTerm(BytesRef term, TermStats stats) {if (count >= interval) {count = 1;return true;} else {count++;return false;}}
public AssociateDhcpOptionsResult associateDhcpOptions(AssociateDhcpOptionsRequest request) {request = beforeClientExecution(request);return executeAssociateDhcpOptions(request);}
public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1,ValueEval arg2) {return evaluate(srcRowIndex, srcColumnIndex, arg0, arg1, arg2, DEFAULT_ARG3);}
public void disconnect() {if (sock.isConnected())sock.disconnect();}
public PredictionContext add(PredictionContext ctx) {if ( ctx==PredictionContext.EMPTY ) return PredictionContext.EMPTY;PredictionContext existing = cache.get(ctx);if ( existing!=null ) {return existing;}cache.put(ctx, ctx);return ctx;}
public UploadLayerPartResult uploadLayerPart(UploadLayerPartRequest request) {request = beforeClientExecution(request);return executeUploadLayerPart(request);}
public String getScriptText() {return getScriptText(null, null);}
public DescribeClusterSubnetGroupsResult describeClusterSubnetGroups() {return describeClusterSubnetGroups(new DescribeClusterSubnetGroupsRequest());}
public char setIndex(int position) {if (position < getBeginIndex() || position > getEndIndex())throw new IllegalArgumentException("Illegal Position: " + position);index = start + position;return current();}
public GetPhoneNumberOrderResult getPhoneNumberOrder(GetPhoneNumberOrderRequest request) {request = beforeClientExecution(request);return executeGetPhoneNumberOrder(request);}
public EpsilonTransition(ATNState target, int outermostPrecedenceReturn) {super(target);this.outermostPrecedenceReturn = outermostPrecedenceReturn;}
public DiffCommand setContextLines(int contextLines) {this.contextLines = contextLines;return this;}
public RejectVpcPeeringConnectionResult rejectVpcPeeringConnection(RejectVpcPeeringConnectionRequest request) {request = beforeClientExecution(request);return executeRejectVpcPeeringConnection(request);}
public static boolean equals(int[] array1, int[] array2) {if (array1 == array2) {return true;}if (array1 == null || array2 == null || array1.length != array2.length) {return false;}for (int i = 0; i < array1.length; i++) {if (array1[i] != array2[i]) {return false;}}return true;}
public static void main(String[] args) throws IOException {if (args.length<1) {System.err.println("Usage: java QualityQueriesFinder <index-dir>");System.exit(1);}QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.open(Paths.get(args[0])));String q[] = qqf.bestQueries("body",20);for (int i=0; i<q.length; i++) {System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));}}
public CharsRef(char[] chars, int offset, int length) {this.chars = chars;this.offset = offset;this.length = length;assert isValid();}
public UpdateIPSetResult updateIPSet(UpdateIPSetRequest request) {request = beforeClientExecution(request);return executeUpdateIPSet(request);}
public void print(Object obj) {print(String.valueOf(obj));}
public String toString() {return "IndexFileDeleter.CommitPoint(" + segmentsFileName + ")";}
public synchronized boolean waitForGeneration(long targetGen, int maxMS) throws InterruptedException {if (targetGen > searchingGen) {reopenLock.lock();waitingGen = Math.max(waitingGen, targetGen);try {reopenCond.signal();} finally {reopenLock.unlock();}long startMS = System.nanoTime()/1000000;while (targetGen > searchingGen) {if (maxMS < 0) {wait();} else {long msLeft = (startMS + maxMS) - System.nanoTime()/1000000;if (msLeft <= 0) {return false;} else {wait(msLeft);}}}}return true;}
public StringBuffer append(boolean b) {return append(b ? "true" : "false");}
public ByteBuffer put(int index, byte b) {throw new ReadOnlyBufferException();}
public int getLineCount() {return lineCount;}
public boolean equals( Object o ) {return o instanceof DutchStemmer;}
public CreateNotificationSubscriptionResult createNotificationSubscription(CreateNotificationSubscriptionRequest request) {request = beforeClientExecution(request);return executeCreateNotificationSubscription(request);}
public boolean isOutdated() {return snapshot.isModified(getFile());}
public DescribeVirtualInterfacesResult describeVirtualInterfaces() {return describeVirtualInterfaces(new DescribeVirtualInterfacesRequest());}
public void onChanged() {buildMap();for (DataSetObserver o : mObservers) {o.onChanged();}}
public DeleteEventTrackerResult deleteEventTracker(DeleteEventTrackerRequest request) {request = beforeClientExecution(request);return executeDeleteEventTracker(request);}
public boolean matches(ValueEval x) {if (x instanceof BlankEval) {switch(getCode()) {case CmpOp.NONE:case CmpOp.EQ:return _value.length() == 0;case CmpOp.NE:return _value.length() != 0;}return false;}if(!(x instanceof StringEval)) {return false;}String testedValue = ((StringEval) x).getStringValue();if (testedValue.length() < 1 && _value.length() < 1) {switch(getCode()) {case CmpOp.NONE: return true;case CmpOp.EQ:   return false;case CmpOp.NE:   return true;}return false;}if (_pattern != null) {return evaluate(_pattern.matcher(testedValue).matches());}return evaluate(testedValue.compareToIgnoreCase(_value));}
public ListWebsiteAuthorizationProvidersResult listWebsiteAuthorizationProviders(ListWebsiteAuthorizationProvidersRequest request) {request = beforeClientExecution(request);return executeListWebsiteAuthorizationProviders(request);}
public void write(char[] buf, int offset, int count) {doWrite(buf, offset, count);}
public String formatAsString() {if(isWholeColumnReference()) {returnCellReference.convertNumToColString(_firstCell.getCol())+ ":" +CellReference.convertNumToColString(_lastCell.getCol());}StringBuilder sb = new StringBuilder(32);sb.append(_firstCell.formatAsString());if(!_isSingleCell) {sb.append(CELL_DELIMITER);if(_lastCell.getSheetName() == null) {sb.append(_lastCell.formatAsString());} else {_lastCell.appendCellReference(sb);}}return sb.toString();}
public Graphics create(){return new EscherGraphics(escherGroup, workbook,foreground, font, verticalPointsPerPixel );}
public DoubleDocValues(ValueSource vs) {this.vs = vs;}
public static CharArraySet getDefaultStopSet(){return DefaultSetHolder.DEFAULT_STOP_SET;}
public DeleteLoadBalancerPolicyResult deleteLoadBalancerPolicy(DeleteLoadBalancerPolicyRequest request) {request = beforeClientExecution(request);return executeDeleteLoadBalancerPolicy(request);}
public ReplicationGroup decreaseReplicaCount(DecreaseReplicaCountRequest request) {request = beforeClientExecution(request);return executeDecreaseReplicaCount(request);}
public Result update(RevWalk walk) throws IOException {requireCanDoUpdate();try {return result = updateImpl(walk, new Store() {@OverrideResult execute(Result status) throws IOException {if (status == Result.NO_CHANGE)return status;return doUpdate(status);}});} catch (IOException x) {result = Result.IO_FAILURE;throw x;}}
public Set<String> getChanged() {return Collections.unmodifiableSet(diff.getChanged());}
public static String toHex(long value) {StringBuilder sb = new StringBuilder(16);writeHex(sb, value, 16, "");return sb.toString();}
public int createPlaceholder() {return _offset++;}
@Override public boolean equals(Object o) {if (o instanceof Map.Entry) {Map.Entry other = (Map.Entry) o;return (key == null ? other.getKey() == null : key.equals(other.getKey()))&& (value == null ? other.getValue() == null : value.equals(other.getValue()));}return false;}
public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0,ValueEval arg1) {double result;try {double d0 = NumericFunction.singleOperandEvaluate(arg0, srcRowIndex, srcColumnIndex);double d1 = NumericFunction.singleOperandEvaluate(arg1, srcRowIndex, srcColumnIndex);double logE = Math.log(d0);if (Double.compare(d1, Math.E) == 0) {result = logE;} else {result = logE / Math.log(d1);}NumericFunction.checkValue(result);} catch (EvaluationException e) {return e.getErrorEval();}return new NumberEval(result);}
public DeleteFilterResult deleteFilter(DeleteFilterRequest request) {request = beforeClientExecution(request);return executeDeleteFilter(request);}
public CreateInstanceSnapshotResult createInstanceSnapshot(CreateInstanceSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateInstanceSnapshot(request);}
public List<Token> getTokens(int start, int stop) {return getTokens(start, stop, null);}
public static TermGroupFacetCollector createTermGroupFacetCollector(String groupField,String facetField,boolean facetFieldMultivalued,BytesRef facetPrefix,int initialSize) {if (facetFieldMultivalued) {return new MV(groupField, facetField, facetPrefix, initialSize);} else {return new SV(groupField, facetField, facetPrefix, initialSize);}}
public RenameAlbumRequest() {super("CloudPhoto", "2017-07-11", "RenameAlbum", "cloudphoto");setProtocol(ProtocolType.HTTPS);}
@Override public boolean contains(Object object) {synchronized (mutex) {return c.contains(object);}}
public CharBuffer put(char[] src, int srcOffset, int charCount) {if (charCount > remaining()) {throw new BufferOverflowException();}System.arraycopy(src, srcOffset, backingArray, offset + position, charCount);position += charCount;return this;}
public LegendRecord(RecordInputStream in) {field_1_xAxisUpperLeft = in.readInt();field_2_yAxisUpperLeft = in.readInt();field_3_xSize          = in.readInt();field_4_ySize          = in.readInt();field_5_type           = in.readByte();field_6_spacing        = in.readByte();field_7_options        = in.readShort();}
public static byte[] encodedTypeString(int typeCode) {switch (typeCode) {case OBJ_COMMIT:return ENCODED_TYPE_COMMIT;case OBJ_TREE:return ENCODED_TYPE_TREE;case OBJ_BLOB:return ENCODED_TYPE_BLOB;case OBJ_TAG:return ENCODED_TYPE_TAG;default:throw new IllegalArgumentException(MessageFormat.format(JGitText.get().badObjectType, Integer.valueOf(typeCode)));}}
public ObjectId getCalulatedPatchId() {return ObjectId.fromRaw(digest.digest());}
public DefaultRowHeightRecord() {field_1_option_flags = 0x0000;field_2_row_height = DEFAULT_ROW_HEIGHT;}
public final ByteBuffer encode(CharBuffer buffer) {try {return newEncoder().onMalformedInput(CodingErrorAction.REPLACE).onUnmappableCharacter(CodingErrorAction.REPLACE).encode(buffer);} catch (CharacterCodingException ex) {throw new Error(ex.getMessage(), ex);}}
public final FloatBuffer get(float[] dst, int dstOffset, int floatCount) {if (floatCount > remaining()) {throw new BufferUnderflowException();}System.arraycopy(backingArray, offset + position, dst, dstOffset, floatCount);position += floatCount;return this;}
public boolean hasNext() {return nextEntry != null;}
public DeleteNatGatewayResult deleteNatGateway(DeleteNatGatewayRequest request) {request = beforeClientExecution(request);return executeDeleteNatGateway(request);}
public String resolveNameXText(int refIndex, int definedNameIndex) {return linkTable.resolveNameXText(refIndex, definedNameIndex, this);}
public void setMultiFields(CharSequence[] fields) {if (fields == null) {fields = new CharSequence[0];}getQueryConfigHandler().set(ConfigurationKeys.MULTI_FIELDS, fields);}
public boolean isCancelled() {lock.lock();try {return pm.isCancelled();} finally {lock.unlock();}}
public RemoveTargetsResult removeTargets(RemoveTargetsRequest request) {request = beforeClientExecution(request);return executeRemoveTargets(request);}
public FuzzyQuery(Term term, int maxEdits, int prefixLength, int maxExpansions, boolean transpositions) {super(term.field());if (maxEdits < 0 || maxEdits > LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE) {throw new IllegalArgumentException("maxEdits must be between 0 and " + LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE);}if (prefixLength < 0) {throw new IllegalArgumentException("prefixLength cannot be negative.");}if (maxExpansions <= 0) {throw new IllegalArgumentException("maxExpansions must be positive.");}this.term = term;this.maxEdits = maxEdits;this.prefixLength = prefixLength;this.transpositions = transpositions;this.maxExpansions = maxExpansions;int[] codePoints = FuzzyTermsEnum.stringToUTF32(term.text());this.termLength = codePoints.length;this.automata = FuzzyTermsEnum.buildAutomata(term.text(), codePoints, prefixLength, transpositions, maxEdits);setRewriteMethod(new MultiTermQuery.TopTermsBlendedFreqScoringRewrite(maxExpansions));this.ramBytesUsed = calculateRamBytesUsed(term, this.automata);}
public CheckoutCommand checkout() {return new CheckoutCommand(repo);}
public ValueEval evaluate(String sheetName, int rowIndex, int columnIndex) {EvaluationCell cell = _sewb.getEvaluationCell(sheetName, rowIndex, columnIndex);switch (cell.getCellType()) {case BOOLEAN:return BoolEval.valueOf(cell.getBooleanCellValue());case ERROR:return ErrorEval.valueOf(cell.getErrorCellValue());case FORMULA:return _evaluator.evaluate(cell);case NUMERIC:return new NumberEval(cell.getNumericCellValue());case STRING:return new StringEval(cell.getStringCellValue());case BLANK:return null;default:throw new IllegalStateException("Bad cell type (" + cell.getCellType() + ")");}}
public PutFileSystemPolicyResult putFileSystemPolicy(PutFileSystemPolicyRequest request) {request = beforeClientExecution(request);return executePutFileSystemPolicy(request);}
public long fileLength(String name) throws IOException {ensureOpen();FileEntry e = entries.get(IndexFileNames.stripSegmentName(name));if (e == null)throw new FileNotFoundException(name);return e.length;}
public DescribeCacheClustersResult describeCacheClusters() {return describeCacheClusters(new DescribeCacheClustersRequest());}
public void setObjectId(RevObject obj) {setObjectId(obj, obj.getType());}
public boolean rowHasCells(int row) {if (row >= records.length) {return false;}CellValueRecordInterface[] rowCells=records[row];if(rowCells==null) return false;for(int col=0;col<rowCells.length;col++) {if(rowCells[col]!=null) return true;}return false;}
public TokenStream create(TokenStream input) {return new SpanishLightStemFilter(input);}
public StoredField(String name, double value) {super(name, TYPE);fieldsData = value;}
public DescribePublicIpv4PoolsResult describePublicIpv4Pools(DescribePublicIpv4PoolsRequest request) {request = beforeClientExecution(request);return executeDescribePublicIpv4Pools(request);}
public IndexRevision(IndexWriter writer) throws IOException {IndexDeletionPolicy delPolicy = writer.getConfig().getIndexDeletionPolicy();if (!(delPolicy instanceof SnapshotDeletionPolicy)) {throw new IllegalArgumentException("IndexWriter must be created with SnapshotDeletionPolicy");}this.writer = writer;this.sdp = (SnapshotDeletionPolicy) delPolicy;this.commit = sdp.snapshot();this.version = revisionVersion(commit);this.sourceFiles = revisionFiles(commit);}
public void setTabIdArray(short[] array) {_tabids = array.clone();}
public UpdateObjectAttributesResult updateObjectAttributes(UpdateObjectAttributesRequest request) {request = beforeClientExecution(request);return executeUpdateObjectAttributes(request);}
public GetGameSessionLogUrlResult getGameSessionLogUrl(GetGameSessionLogUrlRequest request) {request = beforeClientExecution(request);return executeGetGameSessionLogUrl(request);}
public RefCount(T object) {this.object = object;}
public ByteBuffer put(int index, byte b) {checkIndex(index);backingArray[offset + index] = b;return this;}
public IntervalSet LOOK(ATNState s, ATNState stopState, RuleContext ctx) {IntervalSet r = new IntervalSet();boolean seeThruPreds = true; PredictionContext lookContext = ctx != null ? PredictionContext.fromRuleContext(s.atn, ctx) : null;_LOOK(s, stopState, lookContext,r, new HashSet<ATNConfig>(), new BitSet(), seeThruPreds, true);return r;}
public int getValidationType() {return _validationType;}
public DeleteTagCommand tagDelete() {return new DeleteTagCommand(repo);}
public SortRescorer(Sort sort) {this.sort = sort;}
public void verifyBelongsToWorkbook(HSSFWorkbook wb) {if(wb.getWorkbook() != _workbook) {throw new IllegalArgumentException("This Style does not belong to the supplied Workbook. Are you trying to assign a style from one workbook to the cell of a differnt workbook?");}}
public StringBuffer insert(int index, Object obj) {return insert(index, obj == null ? "null" : obj.toString());}
public boolean containsKey(CharSequence cs) {if(cs == null)throw new NullPointerException();return false;}
public int compareTo(HSSFRichTextString r) {return _string.compareTo(r._string);}
public RequestSpotInstancesRequest(String spotPrice) {setSpotPrice(spotPrice);}
public ObjectId getNewObjectId() {return newObjectId;}
public void setDeltaBaseAsOffset(boolean deltaBaseAsOffset) {this.deltaBaseAsOffset = deltaBaseAsOffset;}
public LengthFilterFactory(Map<String, String> args) {super(args);min = requireInt(args, MIN_KEY);max = requireInt(args, MAX_KEY);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public TruncateTokenFilter(TokenStream input, int length) {super(input);if (length < 1)throw new IllegalArgumentException("length parameter must be a positive number: " + length);this.length = length;}
public ListDomainsResult listDomains() {return listDomains(new ListDomainsRequest());}
public ArabicStemFilter create(TokenStream input) {return new ArabicStemFilter(input);}
public PushCommand setRefSpecs(RefSpec... specs) {checkCallable();this.refSpecs.clear();Collections.addAll(refSpecs, specs);return this;}
public BlameGenerator setDiffAlgorithm(DiffAlgorithm algorithm) {diffAlgorithm = algorithm;return this;}
public GroupingSearch setIncludeMaxScore(boolean includeMaxScore) {this.includeMaxScore = includeMaxScore;return this;}
public Field[] createIndexableFields(Shape shape) {double distErr = SpatialArgs.calcDistanceFromErrPct(shape, distErrPct, ctx);return createIndexableFields(shape, distErr);}
public PutMethodResponseResult putMethodResponse(PutMethodResponseRequest request) {request = beforeClientExecution(request);return executePutMethodResponse(request);}
public LegacyCredentials(Credential legacyCrendential) {this.legacyCredential = legacyCrendential;}
public DescribeFeatureTransformationResult describeFeatureTransformation(DescribeFeatureTransformationRequest request) {request = beforeClientExecution(request);return executeDescribeFeatureTransformation(request);}
public DeleteRouteResult deleteRoute(DeleteRouteRequest request) {request = beforeClientExecution(request);return executeDeleteRoute(request);}
public AssociatePhoneNumbersWithVoiceConnectorResult associatePhoneNumbersWithVoiceConnector(AssociatePhoneNumbersWithVoiceConnectorRequest request) {request = beforeClientExecution(request);return executeAssociatePhoneNumbersWithVoiceConnector(request);}
public long ramBytesUsed() {long size = BASE_RAM_BYTES_USED + RamUsageEstimator.shallowSizeOf(blocks);if (blocks.length > 0) {size += (blocks.length - 1) * bytesUsedPerBlock;size += RamUsageEstimator.sizeOf(blocks[blocks.length - 1]);}return size;}
public short readShort(){return _in.readShort();}
public UpdatePipelineNotificationsResult updatePipelineNotifications(UpdatePipelineNotificationsRequest request) {request = beforeClientExecution(request);return executeUpdatePipelineNotifications(request);}
public StringWriter append(char c) {write(c);return this;}
public Iterator<V> iterator() {return new ValueIterator();}
public UnitsRecord(RecordInputStream in) {field_1_units = in.readShort();}
public boolean isEmpty() {return first;}
public String toString() {return "ANY_DIFF"; }
public UpdateDomainNameResult updateDomainName(UpdateDomainNameRequest request) {request = beforeClientExecution(request);return executeUpdateDomainName(request);}
public DeleteSnapshotRequest(String snapshotId) {setSnapshotId(snapshotId);}
public void readFully(byte[] buf) {readFully(buf, 0, buf.length);}
public SliceReader(IntBlockPool pool) {this.pool = pool;}
public void setDeltaSearchMemoryLimit(long memoryLimit) {deltaSearchMemoryLimit = memoryLimit;}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[BOOKBOOL]\n");buffer.append("    .savelinkvalues  = ").append(Integer.toHexString(getSaveLinkValues())).append("\n");buffer.append("[/BOOKBOOL]\n");return buffer.toString();}
public DescribeTransitGatewayAttachmentsResult describeTransitGatewayAttachments(DescribeTransitGatewayAttachmentsRequest request) {request = beforeClientExecution(request);return executeDescribeTransitGatewayAttachments(request);}
public CreateVpcResult createVpc(CreateVpcRequest request) {request = beforeClientExecution(request);return executeCreateVpc(request);}
public DescribeElasticGpusResult describeElasticGpus(DescribeElasticGpusRequest request) {request = beforeClientExecution(request);return executeDescribeElasticGpus(request);}
public IntBuffer put(int c) {if (position == limit) {throw new BufferOverflowException();}byteBuffer.putInt(position++ * SizeOf.INT, c);return this;}
public UpdateEndpointsBatchResult updateEndpointsBatch(UpdateEndpointsBatchRequest request) {request = beforeClientExecution(request);return executeUpdateEndpointsBatch(request);}
public void fromRaw(byte[] bs, int p) {w1 = NB.decodeInt32(bs, p);w2 = NB.decodeInt32(bs, p + 4);w3 = NB.decodeInt32(bs, p + 8);w4 = NB.decodeInt32(bs, p + 12);w5 = NB.decodeInt32(bs, p + 16);}
public static OpenSshConfig get(FS fs) {File home = fs.userHome();if (home == null)home = new File(".").getAbsoluteFile(); final File config = new File(new File(home, SshConstants.SSH_DIR),SshConstants.CONFIG);return new OpenSshConfig(home, config);}
public VCenterRecord(RecordInputStream in) {field_1_vcenter = in.readShort();}
public synchronized InputStream obtainFile(String sessionID, String source, String fileName) throws IOException {ensureOpen();ReplicationSession session = sessions.get(sessionID);if (session != null && session.isExpired(expirationThresholdMilllis)) {releaseSession(sessionID);session = null;}if (session == null) {throw new SessionExpiredException("session (" + sessionID + ") expired while obtaining file: source=" + source+ " file=" + fileName);}sessions.get(sessionID).markAccessed();return session.revision.revision.open(source, fileName);}
public DownloadDefaultKeyPairResult downloadDefaultKeyPair(DownloadDefaultKeyPairRequest request) {request = beforeClientExecution(request);return executeDownloadDefaultKeyPair(request);}
public DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations(DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest request) {request = beforeClientExecution(request);return executeDescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations(request);}
public ResetEbsDefaultKmsKeyIdResult resetEbsDefaultKmsKeyId(ResetEbsDefaultKmsKeyIdRequest request) {request = beforeClientExecution(request);return executeResetEbsDefaultKmsKeyId(request);}
public int getPropertiesPerBlock() {return bigBlockSize / POIFSConstants.PROPERTY_SIZE;}
public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval numberVE) {return this.evaluate(srcRowIndex, srcColumnIndex, numberVE, null);}
public GetFindingsStatisticsResult getFindingsStatistics(GetFindingsStatisticsRequest request) {request = beforeClientExecution(request);return executeGetFindingsStatistics(request);}
public DBCluster modifyDBCluster(ModifyDBClusterRequest request) {request = beforeClientExecution(request);return executeModifyDBCluster(request);}
public LimitTokenCountFilterFactory(Map<String, String> args) {super(args);maxTokenCount = requireInt(args, MAX_TOKEN_COUNT_KEY);consumeAllTokens = getBoolean(args, CONSUME_ALL_TOKENS_KEY, false);if (!args.isEmpty()) {throw new IllegalArgumentException("Unknown parameters: " + args);}}
public MatchNoDocsQuery build(QueryNode queryNode) throws QueryNodeException {if (!(queryNode instanceof MatchNoDocsQueryNode)) {throw new QueryNodeException(new MessageImpl(QueryParserMessages.LUCENE_QUERY_CONVERSION_ERROR, queryNode.toQueryString(new EscapeQuerySyntaxImpl()), queryNode.getClass().getName()));}return new MatchNoDocsQuery();}
public GetUserPolicyRequest(String userName, String policyName) {setUserName(userName);setPolicyName(policyName);}
public Cluster rotateEncryptionKey(RotateEncryptionKeyRequest request) {request = beforeClientExecution(request);return executeRotateEncryptionKey(request);}
public int getLinesAdded() {return nAdded;}
public List<Token> getHiddenTokensToLeft(int tokenIndex, int channel) {lazyInit();if ( tokenIndex<0 || tokenIndex>=tokens.size() ) {throw new IndexOutOfBoundsException(tokenIndex+" not in 0.."+(tokens.size()-1));}if (tokenIndex == 0) {return null;}int prevOnChannel =previousTokenOnChannel(tokenIndex - 1, Lexer.DEFAULT_TOKEN_CHANNEL);if ( prevOnChannel == tokenIndex - 1 ) return null;int from = prevOnChannel+1;int to = tokenIndex-1;return filterForChannel(from, to, channel);}
public ValidDBInstanceModificationsMessage describeValidDBInstanceModifications(DescribeValidDBInstanceModificationsRequest request) {request = beforeClientExecution(request);return executeDescribeValidDBInstanceModifications(request);}
public final void add(RevFlag flag) {flags |= flag.mask;}
public void clear() {Iterator<E> it = iterator();while (it.hasNext()) {it.next();it.remove();}}
public RegisterImageResult registerImage(RegisterImageRequest request) {request = beforeClientExecution(request);return executeRegisterImage(request);}
public boolean equals(Object other) {return sameClassAs(other) &&term.equals(((TermQuery) other).term);}
public URI(String scheme, String authority, String path, String query,String fragment) throws URISyntaxException {if (scheme != null && path != null && !path.isEmpty() && path.charAt(0) != '/') {throw new URISyntaxException(path, "Relative path");}StringBuilder uri = new StringBuilder();if (scheme != null) {uri.append(scheme);uri.append(':');}if (authority != null) {uri.append("");AUTHORITY_ENCODER.appendEncoded(uri, authority);}if (path != null) {PATH_ENCODER.appendEncoded(uri, path);}if (query != null) {uri.append('?');ALL_LEGAL_ENCODER.appendEncoded(uri, query);}if (fragment != null) {uri.append('#');ALL_LEGAL_ENCODER.appendEncoded(uri, fragment);}parseURI(uri.toString(), false);}
public BlameGenerator(Repository repository, String path) {this.repository = repository;this.resultPath = PathFilter.create(path);idBuf = new MutableObjectId();setFollowFileRenames(true);initRevPool(false);remaining = -1;}
public synchronized void writeTo(OutputStream out) throws IOException {out.write(buf, 0, count);}
public DeletableItem(String name, java.util.List<Attribute> attributes) {setName(name);setAttributes(attributes);}
public DescribeGroupResult describeGroup(DescribeGroupRequest request) {request = beforeClientExecution(request);return executeDescribeGroup(request);}
public EnableVpcClassicLinkResult enableVpcClassicLink(EnableVpcClassicLinkRequest request) {request = beforeClientExecution(request);return executeEnableVpcClassicLink(request);}
public DescribeStacksResult describeStacks() {return describeStacks(new DescribeStacksRequest());}
public CharBuffer duplicate() {return copy(this);}
public static double mod(double n, double d) {if (d == 0) {return Double.NaN;}else if (sign(n) == sign(d)) {return n % d;}else {return ((n % d) + d) % d;}}
public static String getLocalizedMessage(String key, Locale locale) {Object message = getResourceBundleObject(key, locale);if (message == null) {return "Message with key:" + key + " and locale: " + locale+ " not found.";}return message.toString();}
public CharSequence toQueryString(EscapeQuerySyntax escapeSyntaxParser) {if (getChild() == null)return "";return getChild().toQueryString(escapeSyntaxParser) + "^"+ getValueString();}
public CharSequence toQueryString(EscapeQuerySyntax escapeSyntaxParser) {if (getChild() == null)return "";return "( " + getChild().toQueryString(escapeSyntaxParser) + " )";}
public GetInvalidationResult getInvalidation(GetInvalidationRequest request) {request = beforeClientExecution(request);return executeGetInvalidation(request);}
public String formatAsString() {return formatAsString(null, false);}
public final int prefixCompare(byte[] bs, int p) {int cmp;cmp = NB.compareUInt32(w1, mask(1, NB.decodeInt32(bs, p)));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w2, mask(2, NB.decodeInt32(bs, p + 4)));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w3, mask(3, NB.decodeInt32(bs, p + 8)));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w4, mask(4, NB.decodeInt32(bs, p + 12)));if (cmp != 0)return cmp;return NB.compareUInt32(w5, mask(5, NB.decodeInt32(bs, p + 16)));}
public AddApplicationInputProcessingConfigurationResult addApplicationInputProcessingConfiguration(AddApplicationInputProcessingConfigurationRequest request) {request = beforeClientExecution(request);return executeAddApplicationInputProcessingConfiguration(request);}
public static TermRangeQuery newStringRange(String field, String lowerTerm, String upperTerm, boolean includeLower, boolean includeUpper) {BytesRef lower = lowerTerm == null ? null : new BytesRef(lowerTerm);BytesRef upper = upperTerm == null ? null : new BytesRef(upperTerm);return new TermRangeQuery(field, lower, upper, includeLower, includeUpper);}
static public double fv(double r, int nper, double pmt, double pv, int type) {return -(pv * Math.pow(1 + r, nper) + pmt * (1+r*type) * (Math.pow(1 + r, nper) - 1) / r);}
public int checkExternSheet(int firstSheetIndex, int lastSheetIndex) {int thisWbIndex = -1; for (int i = 0; i < _externalBookBlocks.length; i++) {SupBookRecord ebr = _externalBookBlocks[i].getExternalBookRecord();if (ebr.isInternalReferences()) {thisWbIndex = i;break;}}if (thisWbIndex < 0) {throw new RuntimeException("Could not find 'internal references' EXTERNALBOOK");}int i = _externSheetRecord.getRefIxForSheet(thisWbIndex, firstSheetIndex, lastSheetIndex);if (i >= 0) {return i;}return _externSheetRecord.addRef(thisWbIndex, firstSheetIndex, lastSheetIndex);}
public DescribeSentimentDetectionJobResult describeSentimentDetectionJob(DescribeSentimentDetectionJobRequest request) {request = beforeClientExecution(request);return executeDescribeSentimentDetectionJob(request);}
public String toString(){StringBuilder buffer = new StringBuilder();buffer.append("[UNITS]\n");buffer.append("    .units                = ").append("0x").append(HexDump.toHex(  getUnits ())).append(" (").append( getUnits() ).append(" )");buffer.append(System.getProperty("line.separator"));buffer.append("[/UNITS]\n");return buffer.toString();}
public NavigableMap<K, V> tailMap(K from, boolean inclusive) {Bound fromBound = inclusive ? INCLUSIVE : EXCLUSIVE;return subMap(from, fromBound, null, NO_BOUND);}
public static int compareTo(Ref o1, Ref o2) {return o1.getName().compareTo(o2.getName());}
public PutEventsConfigurationResult putEventsConfiguration(PutEventsConfigurationRequest request) {request = beforeClientExecution(request);return executePutEventsConfiguration(request);}
public DetachFromIndexResult detachFromIndex(DetachFromIndexRequest request) {request = beforeClientExecution(request);return executeDetachFromIndex(request);}
public RebaseCommand rebase() {return new RebaseCommand(repo);}